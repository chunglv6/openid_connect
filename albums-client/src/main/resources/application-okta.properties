
# Okta specific OAuth 2 related properties 

spring.security.oauth2.client.registration.okta.client-name=FakebookCron
spring.security.oauth2.client.registration.okta.client-id=0oab71v72dlczBZzC5d7
spring.security.oauth2.client.registration.okta.client-secret=x727X0JLgZJXzYu_V6mMHYzbsRYkQIeH58Zkq6L2sB3W65PNrM20JXLIFnYZN9dL
spring.security.oauth2.client.registration.okta.authorization-grant-type=client_credentials
#spring.security.oauth2.client.registration.okta.scope=openid,profile,email,photolibrary.read

# You need to set the issuer correctly. It will look like https://dev-<SOME_NUMBER>.okta.com/oauth2/default
spring.security.oauth2.client.provider.okta.issuer-uri=https://dev-95326440.okta.com/oauth2/default
# You need to make sure this Resource API is running locally at port 8081
photolibrary.resource.uri=http://localhost:8081

photolibrary.authorizer=Okta
photolibrary.albums.uri=${photolibrary.resource.uri}/fakealbums/albums
photolibrary.photos.uri=${photolibrary.resource.uri}/fakealbums/mediaItems
photolibrary.logout.url=${spring.security.oauth2.client.provider.okta.issuer-uri}/v1/logout?post_logout_redirect_uri=http://localhost:${server.port}
