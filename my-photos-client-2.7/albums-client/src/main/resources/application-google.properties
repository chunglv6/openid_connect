
# Spring security OAuth 2.0 Client setup to access Google Albums with Authorization code flow
spring.security.oauth2.client.registration.google.client-name=myalbum
spring.security.oauth2.client.registration.google.client-id=<PLACE GOOGLE CLIENT ID HERE>
spring.security.oauth2.client.registration.google.client-secret=<PLACE GOOGLE CLIENT SECRET HERE>
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=openid,profile,email,https://www.googleapis.com/auth/photoslibrary.readonly
    
# Application specific constants
photolibrary.authorizer=Google
photolibrary.albums.uri=https://photoslibrary.googleapis.com/v1/albums
photolibrary.photos.uri=https://photoslibrary.googleapis.com/v1/mediaItems:search

# We also send a post redirect URI so that Google will redirect to that URL after successful logout
# Unfortunately Google and Okta do this differently
photolibrary.logout.url=https://www.google.com/accounts/Logout?continue=https://appengine.google.com/_ah/logout?continue=http://localhost:${server.port}